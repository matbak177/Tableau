<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.21.0922.0929                               -->
<workbook original-version='18.1' source-build='2020.1.21 (20201.21.0922.0929)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='line-visibility' value='off' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='TopNCustomer' datatype='integer' name='[Discount Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
        <range granularity='5' max='25' min='5' />
      </column>
    </datasource>
    <datasource caption='Orders+ (Superstore)' inline='true' name='federated.0q57cbx1rbe2ha12iu5l7148mgm7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore' name='excel-direct.1l6iemq1xz2vi512mvd2i1rqbtw4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ma177/OneDrive/Pulpit/moje_programy/Tableau/projekty_moje/Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Region]' />
              <expression op='[People].[Region]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1l6iemq1xz2vi512mvd2i1rqbtw4' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.1l6iemq1xz2vi512mvd2i1rqbtw4' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPL_RPL_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Number of Records:qk]&quot;' value='Orders' />
        </aliases>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country &amp; State (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Country &amp; State]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;(United States, Alabama), (United States, Arkansas), (United States, Florida) and 8 more&quot;'>
            <value>(&quot;United States&quot;,&quot;Alabama&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Arkansas&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Florida&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Georgia&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Kentucky&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Louisiana&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Mississippi&quot;)</value>
            <value>(&quot;United States&quot;,&quot;North Carolina&quot;)</value>
            <value>(&quot;United States&quot;,&quot;South Carolina&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Tennessee&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Virginia&quot;)</value>
          </bin>
          <bin default-name='true' value='&quot;(United States, Arizona), (United States, California), (United States, Colorado) and 8 more&quot;'>
            <value>(&quot;United States&quot;,&quot;Arizona&quot;)</value>
            <value>(&quot;United States&quot;,&quot;California&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Colorado&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Idaho&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Montana&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Nevada&quot;)</value>
            <value>(&quot;United States&quot;,&quot;New Mexico&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oregon&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Utah&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Washington&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Wyoming&quot;)</value>
          </bin>
          <bin default-name='true' value='&quot;(United States, Connecticut), (United States, Delaware), (United States, Maine) and 10 more&quot;'>
            <value>(&quot;United States&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Delaware&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Maine&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Maryland&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;United States&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;United States&quot;,&quot;New Jersey&quot;)</value>
            <value>(&quot;United States&quot;,&quot;New York&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Ohio&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Pennsylvania&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;United States&quot;,&quot;West Virginia&quot;)</value>
          </bin>
          <bin default-name='true' value='&quot;(United States, Illinois), (United States, Indiana), (United States, Iowa) and 10 more&quot;'>
            <value>(&quot;United States&quot;,&quot;Illinois&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Indiana&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Iowa&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Kansas&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Michigan&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Minnesota&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Missouri&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Nebraska&quot;)</value>
            <value>(&quot;United States&quot;,&quot;North Dakota&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Oklahoma&quot;)</value>
            <value>(&quot;United States&quot;,&quot;South Dakota&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Texas&quot;)</value>
            <value>(&quot;United States&quot;,&quot;Wisconsin&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Person]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region (People)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Sales]' derivation='Attribute' name='[attr:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Min' name='[min:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Min' name='[min:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Person]' derivation='None' name='[none:Person:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='None' name='[none:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Category,Region (People),Region)' hidden='true' name='[Action (Category,Region (People),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Region (People)]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,Region)' hidden='true' name='[Action (Category,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,Sub-Category)' hidden='true' name='[Action (Category,Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Country &amp; State (group),Country,State)' hidden='true' name='[Action (Country &amp; State (group),Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country &amp; State (group)]' />
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer Name)' hidden='true' name='[Action (Customer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Name]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Region)' hidden='true' name='[Action (MONTH(Order Date),Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date))' hidden='true' name='[Action (YEAR(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Country &amp; State]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category, Sub-Category'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
        <drill-path name='State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.692308' measure-ordering='alphabetic' measure-percentage='0.267857' parameter-percentage='0.0398352' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Country &amp; State (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;(United States, Arizona), (United States, California), (United States, Colorado) and 8 more&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;(United States, Illinois), (United States, Indiana), (United States, Iowa) and 10 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;(United States, Alabama), (United States, Arkansas), (United States, Florida) and 8 more&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;(United States, Connecticut), (United States, Delaware), (United States, Maine) and 10 more&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[min:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[attr:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[min:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[pcto:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[pcto:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Person:nk]' type='shape'>
            <map to='Gender/1.png'>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
            </map>
            <map to='Gender/2.png'>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
            </map>
            <map to='Gender/4.png'>
              <bucket>&quot;Chuck Magee&quot;</bucket>
            </map>
            <map to='Gender/5.png'>
              <bucket>&quot;Kelly Williams&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Poland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sell by Region' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map Sales &amp; Profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='years' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales by Sub-Category' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Profit by Sub-Category' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Profit by Sub-Category' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Sales by Sub-Category' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Map Sales &amp; Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.0q57cbx1rbe2ha12iu5l7148mgm7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0q57cbx1rbe2ha12iu5l7148mgm7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country &amp; State (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Country &amp; State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;(United States, Alabama), (United States, Arkansas), (United States, Florida) and 8 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Alabama&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Arkansas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Florida&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Georgia&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Kentucky&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Louisiana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Mississippi&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;North Carolina&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;South Carolina&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Tennessee&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Virginia&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Arizona), (United States, California), (United States, Colorado) and 8 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Arizona&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Colorado&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Nevada&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Mexico&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Utah&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Wyoming&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Connecticut), (United States, Delaware), (United States, Maine) and 10 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Delaware&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Maine&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Maryland&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Jersey&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New York&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Ohio&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Pennsylvania&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;West Virginia&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Illinois), (United States, Indiana), (United States, Iowa) and 10 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Illinois&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Indiana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Iowa&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Kansas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Michigan&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Minnesota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Missouri&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Nebraska&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;North Dakota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oklahoma&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;South Dakota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Texas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Wisconsin&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (People)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region (People),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region (People)]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Country &amp; State (group),Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country &amp; State (group)]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Country &amp; State (group),Country,State)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region (People),Region)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Longitude (generated)]' field-type='quantitative' max='-7281746.0998198632' min='-14429970.872976663' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Latitude (generated)]' field-type='quantitative' max='6674219.9141792348' min='2790878.4615425635' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]' max='1.0' min='-1.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#f33e01</color>
                <color>#f04d16</color>
                <color>#ee5d2c</color>
                <color>#eb6c41</color>
                <color>#e97a55</color>
                <color>#e78969</color>
                <color>#e4977d</color>
                <color>#e2a590</color>
                <color>#e0b2a3</color>
                <color>#ddbfb5</color>
                <color>#dbccc7</color>
                <color>#d9d9d9</color>
                <color>#ced5db</color>
                <color>#c2d1de</color>
                <color>#b7cde1</color>
                <color>#abc8e4</color>
                <color>#9ec4e7</color>
                <color>#92bfea</color>
                <color>#85bbed</color>
                <color>#77b6f0</color>
                <color>#69b0f3</color>
                <color>#5babf6</color>
                <color>#4da6f9</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.161199' type='rangesize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]' />
              <size column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]' />
              <lod column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Country:nk]' />
              <lod column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:State:nk]' />
              <lod column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7049822807312012' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Latitude (generated)]</rows>
        <cols>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1826DE0A-D92C-4FD0-9DB2-90718F95D045}' />
    </worksheet>
    <worksheet name='Profit by Sub-Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.0q57cbx1rbe2ha12iu5l7148mgm7' />
          </datasources>
          <datasource-dependencies datasource='federated.0q57cbx1rbe2ha12iu5l7148mgm7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country &amp; State (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Country &amp; State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;(United States, Alabama), (United States, Arkansas), (United States, Florida) and 8 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Alabama&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Arkansas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Florida&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Georgia&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Kentucky&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Louisiana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Mississippi&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;North Carolina&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;South Carolina&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Tennessee&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Virginia&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Arizona), (United States, California), (United States, Colorado) and 8 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Arizona&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Colorado&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Nevada&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Mexico&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Utah&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Wyoming&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Connecticut), (United States, Delaware), (United States, Maine) and 10 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Delaware&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Maine&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Maryland&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Jersey&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New York&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Ohio&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Pennsylvania&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;West Virginia&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Illinois), (United States, Indiana), (United States, Iowa) and 10 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Illinois&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Indiana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Iowa&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Kansas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Michigan&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Minnesota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Missouri&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Nebraska&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;North Dakota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oklahoma&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;South Dakota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Texas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Wisconsin&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (People)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region (People),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region (People)]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Country &amp; State (group),Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country &amp; State (group)]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Country &amp; State (group),Country,State)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region (People),Region)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]' value='false' />
            <format attr='text-orientation' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]' max='1.0' min='-1.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#d4522d</color>
                <color>#d45e3c</color>
                <color>#d46a4b</color>
                <color>#d5765b</color>
                <color>#d5826a</color>
                <color>#d68e7a</color>
                <color>#d69a89</color>
                <color>#d7a799</color>
                <color>#d7b3a9</color>
                <color>#d8bfb9</color>
                <color>#d8ccc9</color>
                <color>#d9d9d9</color>
                <color>#cdd4db</color>
                <color>#c1d0dd</color>
                <color>#b5cbe0</color>
                <color>#a9c7e2</color>
                <color>#9cc2e4</color>
                <color>#90bde7</color>
                <color>#82b8e9</color>
                <color>#75b2eb</color>
                <color>#67adee</color>
                <color>#59a7f0</color>
                <color>#4ba2f3</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='div-level' scope='rows' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]</rows>
        <cols>([federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk] / [federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{153E42F0-DC76-486A-A8EC-54472A25B5D1}' />
    </worksheet>
    <worksheet name='Sales by Sub-Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.0q57cbx1rbe2ha12iu5l7148mgm7' />
          </datasources>
          <datasource-dependencies datasource='federated.0q57cbx1rbe2ha12iu5l7148mgm7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country &amp; State (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Country &amp; State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;(United States, Alabama), (United States, Arkansas), (United States, Florida) and 8 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Alabama&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Arkansas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Florida&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Georgia&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Kentucky&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Louisiana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Mississippi&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;North Carolina&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;South Carolina&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Tennessee&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Virginia&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Arizona), (United States, California), (United States, Colorado) and 8 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Arizona&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Colorado&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Nevada&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Mexico&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Utah&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Wyoming&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Connecticut), (United States, Delaware), (United States, Maine) and 10 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Delaware&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Maine&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Maryland&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Jersey&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New York&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Ohio&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Pennsylvania&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;West Virginia&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Illinois), (United States, Indiana), (United States, Iowa) and 10 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Illinois&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Indiana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Iowa&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Kansas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Michigan&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Minnesota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Missouri&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Nebraska&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;North Dakota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oklahoma&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;South Dakota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Texas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Wisconsin&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region (People)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region (People),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region (People)]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Country &amp; State (group),Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country &amp; State (group)]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Country &amp; State (group),Country,State)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region (People),Region)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Sub-Category:nk]' value='110' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Sub-Category:nk]' value='49' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]' value='false' />
            <format attr='text-orientation' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='&lt;Computation&gt;: &lt;Value&gt;' label-type='custom' probability='95' scope='per-pane' value-column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='196' />
                <format attr='maxwidth' value='196' />
                <format attr='minheight' value='356' />
                <format attr='maxheight' value='356' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]</rows>
        <cols>([federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk] / [federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{12FED755-544B-4FF9-BAAD-276821BBE34E}' />
    </worksheet>
    <worksheet name='Sell by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.0q57cbx1rbe2ha12iu5l7148mgm7' />
          </datasources>
          <datasource-dependencies datasource='federated.0q57cbx1rbe2ha12iu5l7148mgm7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Min' name='[min:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Region:nk]' value='22' />
            <format attr='display' class='0' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[min:Number of Records:qk]' scope='rows' value='false' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Region:nk]' value='319' />
            <format attr='text-format' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[pcto:sum:Sales:qk:2]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Region:nk]' value='true' />
            <format attr='color' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Region:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Region:nk]' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]' value='150' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]' />
              <wedge-size column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]' />
              <text column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[pcto:sum:Sales:qk:2]' />
              <lod column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'>&lt;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Region:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total Sales along Table (Down):&#9;</run>
                <run bold='true'>&lt;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[pcto:sum:Sales:qk:2]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'>&lt;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='261' />
                <format attr='maxheight' value='261' />
                <format attr='minwidth' value='240' />
                <format attr='maxwidth' value='240' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='240' />
                <format attr='maxwidth' value='240' />
                <format attr='minheight' value='261' />
                <format attr='maxheight' value='261' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1276' />
                <format attr='maxwidth' value='1276' />
                <format attr='minheight' value='443' />
                <format attr='maxheight' value='443' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='240' />
                <format attr='maxwidth' value='240' />
                <format attr='minheight' value='261' />
                <format attr='maxheight' value='261' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[min:Number of Records:qk]</rows>
        <cols>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{F7C927DD-8587-4A74-B797-2DC3E2A64FEB}' />
    </worksheet>
    <worksheet name='Top Customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.0q57cbx1rbe2ha12iu5l7148mgm7' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TopNCustomer' datatype='integer' name='[Discount Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <range granularity='5' max='25' min='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0q57cbx1rbe2ha12iu5l7148mgm7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country &amp; State (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Country &amp; State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;(United States, Alabama), (United States, Arkansas), (United States, Florida) and 8 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Alabama&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Arkansas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Florida&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Georgia&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Kentucky&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Louisiana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Mississippi&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;North Carolina&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;South Carolina&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Tennessee&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Virginia&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Arizona), (United States, California), (United States, Colorado) and 8 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Arizona&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Colorado&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Nevada&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Mexico&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Utah&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Wyoming&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Connecticut), (United States, Delaware), (United States, Maine) and 10 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Delaware&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Maine&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Maryland&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Jersey&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New York&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Ohio&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Pennsylvania&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;West Virginia&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Illinois), (United States, Indiana), (United States, Iowa) and 10 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Illinois&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Indiana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Iowa&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Kansas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Michigan&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Minnesota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Missouri&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Nebraska&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;North Dakota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oklahoma&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;South Dakota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Texas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Wisconsin&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (People)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Number of Records:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region (People),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region (People)]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Country &amp; State (group),Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country &amp; State (group)]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Customer Name:nk]'>
            <groupfilter count='[Parameters].[Discount Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Aaron Bergman&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Zuschuss Donatelli&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Customer Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Sean Miller&quot;</bucket>
              <bucket>&quot;Tamara Chand&quot;</bucket>
              <bucket>&quot;Raymond Buch&quot;</bucket>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
              <bucket>&quot;Adrian Barton&quot;</bucket>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
              <bucket>&quot;Christopher Conant&quot;</bucket>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
              <bucket>&quot;Greg Tran&quot;</bucket>
              <bucket>&quot;Becky Martin&quot;</bucket>
              <bucket>&quot;Seth Vernon&quot;</bucket>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
              <bucket>&quot;Bill Shonely&quot;</bucket>
              <bucket>&quot;Edward Hooks&quot;</bucket>
              <bucket>&quot;John Lee&quot;</bucket>
              <bucket>&quot;Grant Thornton&quot;</bucket>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
              <bucket>&quot;Peter Fuller&quot;</bucket>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
              <bucket>&quot;Joe Elijah&quot;</bucket>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
              <bucket>&quot;Pete Kriz&quot;</bucket>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
              <bucket>&quot;Karen Daniels&quot;</bucket>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
              <bucket>&quot;Harry Marie&quot;</bucket>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
              <bucket>&quot;Sean Braxton&quot;</bucket>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
              <bucket>&quot;Joseph Holt&quot;</bucket>
              <bucket>&quot;Nora Preis&quot;</bucket>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
              <bucket>&quot;Jim Epp&quot;</bucket>
              <bucket>&quot;Jane Waco&quot;</bucket>
              <bucket>&quot;Lena Creighton&quot;</bucket>
              <bucket>&quot;John Murray&quot;</bucket>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
              <bucket>&quot;Rick Wilson&quot;</bucket>
              <bucket>&quot;Brian Moss&quot;</bucket>
              <bucket>&quot;Paul Prost&quot;</bucket>
              <bucket>&quot;Natalie Webber&quot;</bucket>
              <bucket>&quot;Dean percer&quot;</bucket>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
              <bucket>&quot;Joel Eaton&quot;</bucket>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
              <bucket>&quot;Andy Reiter&quot;</bucket>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
              <bucket>&quot;Grace Kelly&quot;</bucket>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
              <bucket>&quot;Sarah Brown&quot;</bucket>
              <bucket>&quot;James Galang&quot;</bucket>
              <bucket>&quot;Darrin Martin&quot;</bucket>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
              <bucket>&quot;Max Jones&quot;</bucket>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
              <bucket>&quot;Rob Lucas&quot;</bucket>
              <bucket>&quot;William Brown&quot;</bucket>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
              <bucket>&quot;Quincy Jones&quot;</bucket>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
              <bucket>&quot;Shahid Collister&quot;</bucket>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
              <bucket>&quot;Robert Marley&quot;</bucket>
              <bucket>&quot;Keith Herrera&quot;</bucket>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
              <bucket>&quot;Christine Phan&quot;</bucket>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
              <bucket>&quot;Anne McFarland&quot;</bucket>
              <bucket>&quot;Ross Baird&quot;</bucket>
              <bucket>&quot;Katherine Murray&quot;</bucket>
              <bucket>&quot;Alex Avila&quot;</bucket>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
              <bucket>&quot;Naresj Patel&quot;</bucket>
              <bucket>&quot;Amy Cox&quot;</bucket>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
              <bucket>&quot;Emily Phan&quot;</bucket>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
              <bucket>&quot;Luke Weiss&quot;</bucket>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
              <bucket>&quot;Thomas Seio&quot;</bucket>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
              <bucket>&quot;Mitch Webber&quot;</bucket>
              <bucket>&quot;Tom Prescott&quot;</bucket>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
              <bucket>&quot;Harold Ryan&quot;</bucket>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
              <bucket>&quot;Resi Pölking&quot;</bucket>
              <bucket>&quot;Lena Radford&quot;</bucket>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
              <bucket>&quot;Ivan Liston&quot;</bucket>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
              <bucket>&quot;Irene Maddox&quot;</bucket>
              <bucket>&quot;Ted Trevino&quot;</bucket>
              <bucket>&quot;Kunst Miller&quot;</bucket>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
              <bucket>&quot;Alan Hwang&quot;</bucket>
              <bucket>&quot;Dean Katz&quot;</bucket>
              <bucket>&quot;Russell Applegate&quot;</bucket>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
              <bucket>&quot;Jim Kriz&quot;</bucket>
              <bucket>&quot;Bart Watters&quot;</bucket>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
              <bucket>&quot;Rick Bensley&quot;</bucket>
              <bucket>&quot;Erin Smith&quot;</bucket>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
              <bucket>&quot;Kean Thornton&quot;</bucket>
              <bucket>&quot;Sample Company A&quot;</bucket>
              <bucket>&quot;Eugene Moren&quot;</bucket>
              <bucket>&quot;Dave Brooks&quot;</bucket>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
              <bucket>&quot;Mark Cousins&quot;</bucket>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
              <bucket>&quot;Katrina Willman&quot;</bucket>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
              <bucket>&quot;Arianne Irving&quot;</bucket>
              <bucket>&quot;Scot Coram&quot;</bucket>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
              <bucket>&quot;Steven Roelle&quot;</bucket>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
              <bucket>&quot;Matt Abelman&quot;</bucket>
              <bucket>&quot;Sung Pak&quot;</bucket>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
              <bucket>&quot;Rick Duston&quot;</bucket>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
              <bucket>&quot;Frank Hawley&quot;</bucket>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
              <bucket>&quot;Bill Eplett&quot;</bucket>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
              <bucket>&quot;Gary Hwang&quot;</bucket>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
              <bucket>&quot;Peter McVee&quot;</bucket>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
              <bucket>&quot;Denise Monton&quot;</bucket>
              <bucket>&quot;Frank Preis&quot;</bucket>
              <bucket>&quot;Susan Pistek&quot;</bucket>
              <bucket>&quot;Craig Molinari&quot;</bucket>
              <bucket>&quot;Michael Paige&quot;</bucket>
              <bucket>&quot;Sean Christensen&quot;</bucket>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
              <bucket>&quot;Luke Foster&quot;</bucket>
              <bucket>&quot;Pierre Wener&quot;</bucket>
              <bucket>&quot;George Ashbrook&quot;</bucket>
              <bucket>&quot;Ken Heidel&quot;</bucket>
              <bucket>&quot;Chris Cortes&quot;</bucket>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
              <bucket>&quot;Nora Paige&quot;</bucket>
              <bucket>&quot;Kelly Collister&quot;</bucket>
              <bucket>&quot;Fred Chung&quot;</bucket>
              <bucket>&quot;Bill Stewart&quot;</bucket>
              <bucket>&quot;John Stevenson&quot;</bucket>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
              <bucket>&quot;Annie Thurman&quot;</bucket>
              <bucket>&quot;Olvera Toch&quot;</bucket>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
              <bucket>&quot;Michael Chen&quot;</bucket>
              <bucket>&quot;Michael Moore&quot;</bucket>
              <bucket>&quot;Carol Adams&quot;</bucket>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
              <bucket>&quot;Frank Merwin&quot;</bucket>
              <bucket>&quot;Scott Cohen&quot;</bucket>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
              <bucket>&quot;Ben Peterman&quot;</bucket>
              <bucket>&quot;Liz Preis&quot;</bucket>
              <bucket>&quot;Christopher Schild&quot;</bucket>
              <bucket>&quot;Ed Braxton&quot;</bucket>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
              <bucket>&quot;Rick Hansen&quot;</bucket>
              <bucket>&quot;Thomas Boland&quot;</bucket>
              <bucket>&quot;Gary McGarr&quot;</bucket>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
              <bucket>&quot;Erica Smith&quot;</bucket>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
              <bucket>&quot;Anna Gayman&quot;</bucket>
              <bucket>&quot;Emily Ducich&quot;</bucket>
              <bucket>&quot;Pauline Webber&quot;</bucket>
              <bucket>&quot;Sarah Foster&quot;</bucket>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
              <bucket>&quot;Sam Craven&quot;</bucket>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
              <bucket>&quot;Dan Campbell&quot;</bucket>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
              <bucket>&quot;Dennis Kane&quot;</bucket>
              <bucket>&quot;Katharine Harms&quot;</bucket>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
              <bucket>&quot;Rick Reed&quot;</bucket>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
              <bucket>&quot;Brian Stugart&quot;</bucket>
              <bucket>&quot;Rob Williams&quot;</bucket>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
              <bucket>&quot;Adam Hart&quot;</bucket>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
              <bucket>&quot;Carol Triggs&quot;</bucket>
              <bucket>&quot;Edward Becker&quot;</bucket>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
              <bucket>&quot;Mark Packer&quot;</bucket>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
              <bucket>&quot;Brian Thompson&quot;</bucket>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
              <bucket>&quot;Greg Matthias&quot;</bucket>
              <bucket>&quot;Janet Martin&quot;</bucket>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
              <bucket>&quot;Karen Bern&quot;</bucket>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
              <bucket>&quot;Toby Gnade&quot;</bucket>
              <bucket>&quot;Kean Takahito&quot;</bucket>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
              <bucket>&quot;David Bremer&quot;</bucket>
              <bucket>&quot;Noel Staavos&quot;</bucket>
              <bucket>&quot;Tamara Manning&quot;</bucket>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
              <bucket>&quot;Liz Thompson&quot;</bucket>
              <bucket>&quot;Becky Castell&quot;</bucket>
              <bucket>&quot;Julie Kriz&quot;</bucket>
              <bucket>&quot;Shaun Weien&quot;</bucket>
              <bucket>&quot;Maris LaWare&quot;</bucket>
              <bucket>&quot;Rob Dowd&quot;</bucket>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
              <bucket>&quot;Neil Ducich&quot;</bucket>
              <bucket>&quot;Meg Tillman&quot;</bucket>
              <bucket>&quot;Barry Französisch&quot;</bucket>
              <bucket>&quot;David Smith&quot;</bucket>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
              <bucket>&quot;Chuck Clark&quot;</bucket>
              <bucket>&quot;Craig Carroll&quot;</bucket>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
              <bucket>&quot;Linda Southworth&quot;</bucket>
              <bucket>&quot;Darren Budd&quot;</bucket>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
              <bucket>&quot;Troy Staebel&quot;</bucket>
              <bucket>&quot;Gary Hansen&quot;</bucket>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
              <bucket>&quot;Trudy Brown&quot;</bucket>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
              <bucket>&quot;John Castell&quot;</bucket>
              <bucket>&quot;Philip Fox&quot;</bucket>
              <bucket>&quot;Emily Burns&quot;</bucket>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
              <bucket>&quot;Michelle Moray&quot;</bucket>
              <bucket>&quot;Ken Black&quot;</bucket>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
              <bucket>&quot;Marc Crier&quot;</bucket>
              <bucket>&quot;John Lucas&quot;</bucket>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
              <bucket>&quot;Justin Ellison&quot;</bucket>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
              <bucket>&quot;Frank Olsen&quot;</bucket>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
              <bucket>&quot;Richard Bierner&quot;</bucket>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
              <bucket>&quot;Dave Kipp&quot;</bucket>
              <bucket>&quot;Christina Anderson&quot;</bucket>
              <bucket>&quot;Logan Currie&quot;</bucket>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
              <bucket>&quot;Helen Andreada&quot;</bucket>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
              <bucket>&quot;Steve Chapman&quot;</bucket>
              <bucket>&quot;Neola Schneider&quot;</bucket>
              <bucket>&quot;Beth Thompson&quot;</bucket>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
              <bucket>&quot;Mary Zewe&quot;</bucket>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
              <bucket>&quot;Deanra Eno&quot;</bucket>
              <bucket>&quot;Corey Catlett&quot;</bucket>
              <bucket>&quot;Ann Chong&quot;</bucket>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
              <bucket>&quot;Fred McMath&quot;</bucket>
              <bucket>&quot;Julia Barnett&quot;</bucket>
              <bucket>&quot;Joy Smith&quot;</bucket>
              <bucket>&quot;Don Jones&quot;</bucket>
              <bucket>&quot;Amy Hunt&quot;</bucket>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
              <bucket>&quot;Beth Paige&quot;</bucket>
              <bucket>&quot;Charles Crestani&quot;</bucket>
              <bucket>&quot;Nat Carroll&quot;</bucket>
              <bucket>&quot;Filia McAdams&quot;</bucket>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
              <bucket>&quot;George Zrebassa&quot;</bucket>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
              <bucket>&quot;Bart Pistole&quot;</bucket>
              <bucket>&quot;Matt Collister&quot;</bucket>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
              <bucket>&quot;David Flashing&quot;</bucket>
              <bucket>&quot;Xylona Preis&quot;</bucket>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
              <bucket>&quot;Nick Radford&quot;</bucket>
              <bucket>&quot;Jack Garza&quot;</bucket>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
              <bucket>&quot;Craig Leslie&quot;</bucket>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
              <bucket>&quot;Dean Braden&quot;</bucket>
              <bucket>&quot;Chris McAfee&quot;</bucket>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
              <bucket>&quot;Fred Harton&quot;</bucket>
              <bucket>&quot;Craig Carreira&quot;</bucket>
              <bucket>&quot;Bobby Elias&quot;</bucket>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
              <bucket>&quot;Matt Connell&quot;</bucket>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
              <bucket>&quot;Ken Dana&quot;</bucket>
              <bucket>&quot;Tony Sayre&quot;</bucket>
              <bucket>&quot;Jason Gross&quot;</bucket>
              <bucket>&quot;Laurel Workman&quot;</bucket>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
              <bucket>&quot;Nathan Cano&quot;</bucket>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
              <bucket>&quot;Dave Poirier&quot;</bucket>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
              <bucket>&quot;Maya Herman&quot;</bucket>
              <bucket>&quot;Janet Lee&quot;</bucket>
              <bucket>&quot;Justin Ritter&quot;</bucket>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
              <bucket>&quot;Bill Tyler&quot;</bucket>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
              <bucket>&quot;Roy Phan&quot;</bucket>
              <bucket>&quot;Theresa Swint&quot;</bucket>
              <bucket>&quot;Helen Abelman&quot;</bucket>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
              <bucket>&quot;Neoma Murray&quot;</bucket>
              <bucket>&quot;John Dryer&quot;</bucket>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
              <bucket>&quot;Duane Noonan&quot;</bucket>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
              <bucket>&quot;Max Ludwig&quot;</bucket>
              <bucket>&quot;Roger Barcio&quot;</bucket>
              <bucket>&quot;Tom Stivers&quot;</bucket>
              <bucket>&quot;Art Ferguson&quot;</bucket>
              <bucket>&quot;Carlos Daly&quot;</bucket>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
              <bucket>&quot;Denny Joy&quot;</bucket>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
              <bucket>&quot;Doug Bickford&quot;</bucket>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
              <bucket>&quot;Nona Balk&quot;</bucket>
              <bucket>&quot;Scott Williamson&quot;</bucket>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
              <bucket>&quot;Christy Brittain&quot;</bucket>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
              <bucket>&quot;Jay Fein&quot;</bucket>
              <bucket>&quot;Max Engle&quot;</bucket>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
              <bucket>&quot;Shaun Chance&quot;</bucket>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
              <bucket>&quot;Skye Norling&quot;</bucket>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
              <bucket>&quot;Emily Grady&quot;</bucket>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
              <bucket>&quot;Noah Childs&quot;</bucket>
              <bucket>&quot;Janet Molinari&quot;</bucket>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
              <bucket>&quot;Andrew Allen&quot;</bucket>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
              <bucket>&quot;Monica Federle&quot;</bucket>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
              <bucket>&quot;Ben Wallace&quot;</bucket>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
              <bucket>&quot;Adrian Hane&quot;</bucket>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
              <bucket>&quot;Brad Eason&quot;</bucket>
              <bucket>&quot;Denny Blanton&quot;</bucket>
              <bucket>&quot;Julie Prescott&quot;</bucket>
              <bucket>&quot;Tracy Zic&quot;</bucket>
              <bucket>&quot;Becky Pak&quot;</bucket>
              <bucket>&quot;Darren Koutras&quot;</bucket>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
              <bucket>&quot;Ryan Akin&quot;</bucket>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
              <bucket>&quot;Candace McMahon&quot;</bucket>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
              <bucket>&quot;Chad McGuire&quot;</bucket>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
              <bucket>&quot;Erica Bern&quot;</bucket>
              <bucket>&quot;Anne Pryor&quot;</bucket>
              <bucket>&quot;Annie Zypern&quot;</bucket>
              <bucket>&quot;Maurice Satty&quot;</bucket>
              <bucket>&quot;Tim Brockman&quot;</bucket>
              <bucket>&quot;Craig Reiter&quot;</bucket>
              <bucket>&quot;Alan Haines&quot;</bucket>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
              <bucket>&quot;Mike Caudle&quot;</bucket>
              <bucket>&quot;James Lanier&quot;</bucket>
              <bucket>&quot;Karl Braun&quot;</bucket>
              <bucket>&quot;George Bell&quot;</bucket>
              <bucket>&quot;Odella Nelson&quot;</bucket>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
              <bucket>&quot;Ann Blume&quot;</bucket>
              <bucket>&quot;John Grady&quot;</bucket>
              <bucket>&quot;Dan Lawera&quot;</bucket>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
              <bucket>&quot;Parhena Norris&quot;</bucket>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
              <bucket>&quot;Philip Brown&quot;</bucket>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
              <bucket>&quot;Raymond Messe&quot;</bucket>
              <bucket>&quot;Paul Knutson&quot;</bucket>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
              <bucket>&quot;Julia West&quot;</bucket>
              <bucket>&quot;Mick Brown&quot;</bucket>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
              <bucket>&quot;Christine Abelman&quot;</bucket>
              <bucket>&quot;Roger Demir&quot;</bucket>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
              <bucket>&quot;Don Miller&quot;</bucket>
              <bucket>&quot;Gene Hale&quot;</bucket>
              <bucket>&quot;Sarah Bern&quot;</bucket>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
              <bucket>&quot;Bryan Mills&quot;</bucket>
              <bucket>&quot;Barry Franz&quot;</bucket>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
              <bucket>&quot;Dario Medina&quot;</bucket>
              <bucket>&quot;Michelle Tran&quot;</bucket>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
              <bucket>&quot;Sibella Parks&quot;</bucket>
              <bucket>&quot;Matt Collins&quot;</bucket>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
              <bucket>&quot;Corey-Lock&quot;</bucket>
              <bucket>&quot;Denny Ordway&quot;</bucket>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
              <bucket>&quot;Cari Sayre&quot;</bucket>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
              <bucket>&quot;Stuart Van&quot;</bucket>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
              <bucket>&quot;Liz Willingham&quot;</bucket>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
              <bucket>&quot;Gene McClure&quot;</bucket>
              <bucket>&quot;Steve Carroll&quot;</bucket>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
              <bucket>&quot;Tony Chapman&quot;</bucket>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
              <bucket>&quot;Michael Grace&quot;</bucket>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
              <bucket>&quot;Patrick Jones&quot;</bucket>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
              <bucket>&quot;Jack Lebron&quot;</bucket>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
              <bucket>&quot;Debra Catini&quot;</bucket>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
              <bucket>&quot;Jim Radford&quot;</bucket>
              <bucket>&quot;Duane Benoit&quot;</bucket>
              <bucket>&quot;Claire Gute&quot;</bucket>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
              <bucket>&quot;Carl Weiss&quot;</bucket>
              <bucket>&quot;Jim Sink&quot;</bucket>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
              <bucket>&quot;Alan Barnes&quot;</bucket>
              <bucket>&quot;Tony Molinari&quot;</bucket>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
              <bucket>&quot;Scot Wooten&quot;</bucket>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
              <bucket>&quot;David Wiener&quot;</bucket>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
              <bucket>&quot;Pauline Chand&quot;</bucket>
              <bucket>&quot;David Philippe&quot;</bucket>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
              <bucket>&quot;Phillina Ober&quot;</bucket>
              <bucket>&quot;Allen Armold&quot;</bucket>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
              <bucket>&quot;Alex Russell&quot;</bucket>
              <bucket>&quot;Darren Powers&quot;</bucket>
              <bucket>&quot;Duane Huffman&quot;</bucket>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
              <bucket>&quot;Tiffany House&quot;</bucket>
              <bucket>&quot;Sean Wendt&quot;</bucket>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
              <bucket>&quot;Randy Bradley&quot;</bucket>
              <bucket>&quot;Lynn Smith&quot;</bucket>
              <bucket>&quot;Bruce Geld&quot;</bucket>
              <bucket>&quot;Victor Preis&quot;</bucket>
              <bucket>&quot;Ken Brennan&quot;</bucket>
              <bucket>&quot;Barry Pond&quot;</bucket>
              <bucket>&quot;Toby Swindell&quot;</bucket>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
              <bucket>&quot;Roy Collins&quot;</bucket>
              <bucket>&quot;Sung Shariari&quot;</bucket>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
              <bucket>&quot;Rachel Payne&quot;</bucket>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
              <bucket>&quot;Roy Französisch&quot;</bucket>
              <bucket>&quot;Eric Barreto&quot;</bucket>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
              <bucket>&quot;Eric Murdock&quot;</bucket>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
              <bucket>&quot;Evan Henry&quot;</bucket>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
              <bucket>&quot;Chad Sievert&quot;</bucket>
              <bucket>&quot;Harold Engle&quot;</bucket>
              <bucket>&quot;Sally Knutson&quot;</bucket>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
              <bucket>&quot;Art Foster&quot;</bucket>
              <bucket>&quot;Julie Creighton&quot;</bucket>
              <bucket>&quot;Michael Stewart&quot;</bucket>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
              <bucket>&quot;Todd Boyes&quot;</bucket>
              <bucket>&quot;Ann Steele&quot;</bucket>
              <bucket>&quot;Erica Hackney&quot;</bucket>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
              <bucket>&quot;Brendan Murry&quot;</bucket>
              <bucket>&quot;David Kendrick&quot;</bucket>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
              <bucket>&quot;Harry Greene&quot;</bucket>
              <bucket>&quot;Michael Granlund&quot;</bucket>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
              <bucket>&quot;Steven Ward&quot;</bucket>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
              <bucket>&quot;Dorris liebe&quot;</bucket>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
              <bucket>&quot;Tracy Collins&quot;</bucket>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
              <bucket>&quot;Angele Hood&quot;</bucket>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
              <bucket>&quot;Peter Bühler&quot;</bucket>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
              <bucket>&quot;Toby Ritter&quot;</bucket>
              <bucket>&quot;Alex Grayson&quot;</bucket>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
              <bucket>&quot;Bryan Davis&quot;</bucket>
              <bucket>&quot;Anna Chung&quot;</bucket>
              <bucket>&quot;Anthony Witt&quot;</bucket>
              <bucket>&quot;Lori Olson&quot;</bucket>
              <bucket>&quot;Joy Bell-&quot;</bucket>
              <bucket>&quot;Carol Darley&quot;</bucket>
              <bucket>&quot;Mathew Reese&quot;</bucket>
              <bucket>&quot;Astrea Jones&quot;</bucket>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
              <bucket>&quot;Maria Zettner&quot;</bucket>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
              <bucket>&quot;Alan Shonely&quot;</bucket>
              <bucket>&quot;Brian Derr&quot;</bucket>
              <bucket>&quot;Neil Knudson&quot;</bucket>
              <bucket>&quot;Carlos Meador&quot;</bucket>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
              <bucket>&quot;John Huston&quot;</bucket>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
              <bucket>&quot;Andy Yotov&quot;</bucket>
              <bucket>&quot;Corey Roper&quot;</bucket>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
              <bucket>&quot;Erin Creighton&quot;</bucket>
              <bucket>&quot;Khloe Miller&quot;</bucket>
              <bucket>&quot;Kelly Williams&quot;</bucket>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
              <bucket>&quot;Shui Tom&quot;</bucket>
              <bucket>&quot;Vivek Grady&quot;</bucket>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
              <bucket>&quot;Brad Thomas&quot;</bucket>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
              <bucket>&quot;Barry Weirich&quot;</bucket>
              <bucket>&quot;Joy Daniels&quot;</bucket>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
              <bucket>&quot;Neil Französisch&quot;</bucket>
              <bucket>&quot;Melanie Seite&quot;</bucket>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
              <bucket>&quot;Heather Jas&quot;</bucket>
              <bucket>&quot;Don Weiss&quot;</bucket>
              <bucket>&quot;Larry Tron&quot;</bucket>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
              <bucket>&quot;Jill Matthias&quot;</bucket>
              <bucket>&quot;Chuck Magee&quot;</bucket>
              <bucket>&quot;Larry Hughes&quot;</bucket>
              <bucket>&quot;Sung Chung&quot;</bucket>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
              <bucket>&quot;Bart Folk&quot;</bucket>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
              <bucket>&quot;Brad Norvell&quot;</bucket>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
              <bucket>&quot;Sally Matthias&quot;</bucket>
              <bucket>&quot;Paul Lucas&quot;</bucket>
              <bucket>&quot;Guy Phonely&quot;</bucket>
              <bucket>&quot;Erin Mull&quot;</bucket>
              <bucket>&quot;Guy Thornton&quot;</bucket>
              <bucket>&quot;Robert Barroso&quot;</bucket>
              <bucket>&quot;Hilary Holden&quot;</bucket>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
              <bucket>&quot;Pete Takahito&quot;</bucket>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
              <bucket>&quot;Michael Oakman&quot;</bucket>
              <bucket>&quot;Greg Hansen&quot;</bucket>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
              <bucket>&quot;Roland Murray&quot;</bucket>
              <bucket>&quot;Karen Seio&quot;</bucket>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
              <bucket>&quot;Adrian Shami&quot;</bucket>
              <bucket>&quot;Larry Blacks&quot;</bucket>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
              <bucket>&quot;Roy Skaria&quot;</bucket>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
              <bucket>&quot;Carl Jackson&quot;</bucket>
              <bucket>&quot;Lela Donovan&quot;</bucket>
              <bucket>&quot;Thais Sissman&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Customer Name:nk]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Country &amp; State (group),Country,State)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region (People),Region)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]' value='74' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Customer Name:nk]</rows>
        <cols>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{80A132B4-98AE-4926-B78B-24D9843C2228}' />
    </worksheet>
    <worksheet name='Values'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.0q57cbx1rbe2ha12iu5l7148mgm7' />
          </datasources>
          <datasource-dependencies datasource='federated.0q57cbx1rbe2ha12iu5l7148mgm7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country &amp; State (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Country &amp; State]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;(United States, Alabama), (United States, Arkansas), (United States, Florida) and 8 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Alabama&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Arkansas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Florida&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Georgia&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Kentucky&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Louisiana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Mississippi&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;North Carolina&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;South Carolina&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Tennessee&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Virginia&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Arizona), (United States, California), (United States, Colorado) and 8 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Arizona&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;California&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Colorado&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Idaho&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Montana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Nevada&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Mexico&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oregon&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Utah&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Washington&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Wyoming&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Connecticut), (United States, Delaware), (United States, Maine) and 10 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Delaware&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Maine&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Maryland&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New Jersey&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;New York&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Ohio&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Pennsylvania&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;West Virginia&quot;)</value>
                </bin>
                <bin default-name='true' value='&quot;(United States, Illinois), (United States, Indiana), (United States, Iowa) and 10 more&quot;'>
                  <value>(&quot;United States&quot;,&quot;Illinois&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Indiana&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Iowa&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Kansas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Michigan&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Minnesota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Missouri&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Nebraska&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;North Dakota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Oklahoma&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;South Dakota&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Texas&quot;)</value>
                  <value>(&quot;United States&quot;,&quot;Wisconsin&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region (People)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Quantity:qk]&quot;</bucket>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Number of Records:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region (People),Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region (People)]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Category]' />
              <groupfilter function='level-members' level='[Sub-Category]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Country &amp; State (group),Country,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country &amp; State (group)]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Country &amp; State (group),Country,State)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Sub-Category)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (Category,Region (People),Region)]</column>
            <column>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Action (YEAR(Order Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]' value='245' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-style' scope='rows' value='solid' />
            <format attr='border-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-color' scope='cols' value='#000000' />
            <format attr='border-width' data-class='total' scope='cols' value='1' />
            <format attr='border-style' data-class='total' scope='cols' value='solid' />
            <format attr='border-color' data-class='subtotal' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Multiple Values]' />
              <text column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Multiple Values]&gt;</run>
                <run>&#10;&lt;[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C074AC13-2850-4D85-AAB8-CEA51D19AB03}' />
    </worksheet>
    <worksheet name='years'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.0q57cbx1rbe2ha12iu5l7148mgm7' />
          </datasources>
          <datasource-dependencies datasource='federated.0q57cbx1rbe2ha12iu5l7148mgm7'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Min' name='[min:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[yr:Order Date:ok]' value='32' />
            <format attr='display' class='0' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[min:Number of Records:qk]' scope='rows' value='false' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[yr:Order Date:ok]' value='171' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[yr:Order Date:ok]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#a8c1e8' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='55' />
                <format attr='maxheight' value='55' />
                <format attr='minwidth' value='684' />
                <format attr='maxwidth' value='684' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[min:Number of Records:qk]</rows>
        <cols>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{A453B681-EEFE-4316-A310-B6C631133F1F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='1600' maxwidth='1000' minheight='1600' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='TopNCustomer' datatype='integer' name='[Discount Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
          <calculation class='tableau' formula='15' />
          <range granularity='5' max='25' min='5' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='24375' id='5' name='Map Sales &amp; Profit' w='49000' x='400' y='25000' />
        <zone h='24500' id='6' name='Sales by Sub-Category' w='99200' x='300' y='49875' />
        <zone h='14125' id='7' name='Sell by Region' w='99800' x='100' y='9438' />
        <zone h='1500' id='8' name='Sell by Region' pane-specification-id='3' param='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]' show-title='false' type='color' w='45700' x='28200' y='11625' />
        <zone h='24375' id='13' name='Top Customers' w='49600' x='50300' y='25000' />
        <zone h='1813' id='14' mode='slider' param='[Parameters].[Discount Parameter]' show-title='false' type='paramctrl' w='31200' x='67000' y='25438' />
        <zone h='25000' id='21' name='Profit by Sub-Category' w='99300' x='100' y='74750' />
        <zone h='1563' id='22' name='Profit by Sub-Category' pane-specification-id='0' param='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]' type='color' w='16100' x='33000' y='47438' />
        <zone h='2875' id='23' param='vert' type='layout-flow' w='99900' x='100' y='-625'>
          <zone forceUpdate='true' h='2813' id='4' type='text' w='99900' x='100' y='-625'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='16'>SUPERSTORE DASHBOARD</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#a8c1e8' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#a8c1e8' />
          </zone-style>
        </zone>
        <zone h='3688' id='24' name='Values' show-title='false' w='99300' x='100' y='2688'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='0' />
          </zone-style>
        </zone>
        <zone h='2938' id='41' name='years' show-title='false' w='99100' x='100' y='6563' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='99000' id='48' param='vert' type='layout-flow' w='98400' x='800' y='500'>
                <zone forceUpdate='true' h='2813' id='4' type='text' w='99900' x='100' y='-625'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='16'>SUPERSTORE DASHBOARD</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#a8c1e8' />
                  </zone-style>
                </zone>
                <zone fixed-size='59' h='3688' id='24' is-fixed='true' name='Values' show-title='false' w='99300' x='100' y='2688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='47' h='2938' id='41' is-fixed='true' name='years' show-title='false' w='99100' x='100' y='6563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='14125' id='7' is-fixed='true' name='Sell by Region' w='99800' x='100' y='9438'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1500' id='8' name='Sell by Region' pane-specification-id='3' param='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]' show-title='false' type='color' w='45700' x='28200' y='11625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24375' id='5' is-fixed='true' name='Map Sales &amp; Profit' w='49000' x='400' y='25000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24375' id='13' is-fixed='true' name='Top Customers' w='49600' x='50300' y='25000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1813' id='14' mode='slider' param='[Parameters].[Discount Parameter]' show-title='false' type='paramctrl' w='31200' x='67000' y='25438'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24500' id='6' is-fixed='true' name='Sales by Sub-Category' w='99200' x='300' y='49875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='25000' id='21' is-fixed='true' name='Profit by Sub-Category' w='99300' x='100' y='74750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='1563' id='22' name='Profit by Sub-Category' pane-specification-id='0' param='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]' type='color' w='16100' x='33000' y='47438'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2F533524-290C-4FC5-AF3B-DDAC42B9E78A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Map Sales &amp; Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Country &amp; State (group)]</field>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Region (copy) (group)]</field>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Country:nk]</field>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B480024-8121-4DD6-A190-2EDA4ACC69C0}' />
    </window>
    <window class='worksheet' name='Sales by Sub-Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70DEC81D-8268-42B9-ADE7-55CD931B1308}' />
    </window>
    <window class='worksheet' name='Top Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card mode='slider' param='[Parameters].[Discount Parameter]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]</field>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99C1BF9B-386A-463F-A123-955D85BF5079}' />
    </window>
    <window class='worksheet' name='Sell by Region'>
      <cards>
        <edge name='left'>
          <strip size='176'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[Country &amp; State (group)]</field>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[attr:Category:nk]</field>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]</field>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Region (People):nk]</field>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C74A0C3-C706-41A0-AD7E-D3B49380CFFE}' />
    </window>
    <window class='worksheet' name='Profit by Sub-Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2983CBB8-BD8F-4393-8F5B-AFB4F4970DFB}' />
    </window>
    <window class='worksheet' name='Values'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF91EACF-69F8-4672-80AA-067EB013BCDB}' />
    </window>
    <window class='worksheet' name='years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{099D80FE-200C-4FAD-8BDF-291A37F6EB5B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Map Sales &amp; Profit'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Profit by Sub-Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales by Sub-Category'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sell by Region'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0q57cbx1rbe2ha12iu5l7148mgm7].[none:Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top Customers' />
        <viewpoint name='Values'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='years'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{510E789A-64FF-448A-B9E6-7BE066BD1741}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map Sales &amp; Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit by Sub-Category' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAATaElEQVR4nO3dSY8c533H8W8tve/L9DIbh5IokXIk2ZacxVkMOA6CBMg5EJCTESAB8g4C
      BMlLCHwMggC5+uYADpBAh8CBYwWWJVtmKI1IDmfhdE/vPb1XdS05jExq5JnhVJEzw2b9PycO
      u57qp6vr1089T9VTpbiu6yJEQKlXXQEhrtKFBGA4HF7EaheCYRiYpnnV1RDnpF/ESoN8VBXk
      z76I5BBIBJoEQASaBEAEmgRABJoEQASaBEAEmgRABJoEQASaBEAEmgRABJoEQASaBEAEmgRA
      BJoEQASaBEAEmuf5ALY55tO7O5SW13CnfWw9QTIWIhELMxhbZDOJi6inEBfCcwCGrRoDU+Gl
      GGw3bVSnyTii48wM1m7clAkhYqF4DkBm+RV+q2Jx+/YviCWXUZ051txgNDXRNRXXdSUEYmF4
      DsBk0GX7YZ3K2mtM+3XsSIKlZJ4bL8VpdvtUijkURbmIugrxzCkXcVuUwWBAOp1+1qtdCLPZ
      DEVRiEQiV10VcQ4yCiQCTQIgAk0CIAJNAiACTQIgAk0CIAJNAiACTQIgAk0CIAJNAiACTQIg
      Ak0CIAJNAiACTQIgAk0CIAJNAiACzfOMMNd1ufvRf+OU38BobGHrUfKZBKmwghnOUy2kLqKe
      QlwIzy1A92AHJZxgNuoSz6+Ri0WYTAbc2+9SySexbVvmBIuF4TkAsWSORDSERZhJZ4/e1CAe
      T3Fjtch+q4emaTInWCwMmRP8jMmc4MUinWARaBIAEWgSABFoEgARaBIAEWgSABFoEgARaBIA
      EWgSABFoni+GE+djOy4/3Jyfe/l4WOE7L4cusEbiJBKAC+K48E8fmOdevpyUAFwFOQQSgSYB
      EIEmARCBJgEQgSYBEIHmeRRoOuzzYG+ffGkFY9DE1pNkk1HSiRDdMZTyMidYLA7PAYgm0ySi
      LcaDJo6bRDXGtKY9tncs3nzrTRzHkTnBz0Bz5PCPPzHOvfwreZXvvi2z0LzyHABrPqdQXGJr
      e5twJIzj2mjhCImww2xukwjLnOBnYWbBxwf2uZeXY1l/PAfAnhs8rB2wtvEq81EHWy+RjIVI
      JqL0BxOUSDDnAovF5P0QKJHm5s3Pd/J0/NhruaycyRSLRVpOEWgSABFoEgARaBd6Nej+wGG3
      75x7+Y2cSjUlmRSX50ID8D+7Fv/60fkvCf6rb4T5s5vhC6yREMfJz60INAmACDQJgAg0CYAI
      tBMD8MEHH1x2PYS4EicG4P333+fjjz++7LoIcelOPQT60Y9+xHvvvXeZdRHi0p14HuDdd9+9
      7HoIcSVObAEKhQLRaIRcNsN0ev5JGUIsmhNbgE7tAd//wb+zsb7OxuvvcOt69bLrJZ5Sfejw
      v3vWuZffyKl8tRq8+6Sd+IkPJybX15ZxVJ1sOnHsNdd1GQ4OiSXTOOYMR9UJaSq6pmLObcJh
      mRPwPNjtO/zzz85/Gcqf3NAlAL9iOQ6r165Tqa6STB2f9GKMBwxGY/ZqdWzDwlVVUukYUWzC
      +VWKEgCxQE7sA2j2nA8/+jm3b9+mP5oeey0STzA67LFSLRDLlEnHIhjTEXvtEYVUVB6ULRbK
      iS3Ay7fepNfrUOsMUVXt2GutvQeMLYXZXMca7WGE4uQyBdYrYfZbPVZLeZkULxbGqQd9hqPx
      21+7RavdpZR9fBhUunaD0uf/rizlj5U53lsQ4vl3agDM2ZRQqsxrVdmtg+jhocNW7/y3Zbme
      01jLLN6lZScGwHVd4hGN93/yY95655ssF+VWJ0Hzwb7laRTpu18Ps5ZZvMlMJ0b25+//F3sH
      Pd74xu/Jzi9eaCcGoN3tEFIs/uOH/8Z+6/Cy6yTEpTnxEOgPvv2nmNbR8V80Fj9pESFeCCcG
      IBKLI7dZFUGweN12IZ4hCYAINAmACDQJgAg0CYAItOf6AvDv/WTGf947/6SOf/h2lHdWnuuP
      JJ4z0gKIQJMAiECTAIhAkwCIQPPcYzSnQ37801/wrd//HX754c+xQ1HymTipsIoZzlMtyIOy
      xeLw3AKEYylWygWwxsQLa+RiESaTIff2u1TySZkTLBaK5xZgOuyzt/eQeDrPpPsQW4+Sz6Sp
      5HSZEywWjucAxFJZ/vA7fwTAarV87LX8SQWEeI5JJ1gEmgRABJoEQASaXDgjLsT7exaftM5/
      W5W/eCtMSLv8wRMJgLgQH9Vtfrg5P/fyf/5GmNAXbkL4d+9Nsc85mp4Mw99+K+axhkckAOK5
      9PGBfe4AZKL+Ww4JgHjhDAyXf/nZ+R7sIgEQL5zZ3OW9++ebRyKjQCLQJAAi0CQAItAkACLQ
      JAAi0CQAItAkACLQJAAi0J7iRJjLztZdbD1BNhklnQjTHUMpL3OCxeLwHwB7gukmUY0xrWmf
      7R2LN996E8dxsCwL0zSJKwbriTmKoqAoCo7jAKCoCgrgOEcXe6iqiuu6RHGZTu1Hf2d0k/Wk
      haqqR2VdjtalKjj25+v6wro1W8Ewjq5AdBwHt/kQjOmJ1T+JunwdNRzBto/W4dYegH3+O9Pp
      117DNI+eq6XaDhtp61z1BijGNQzDePQ3tsK15PzR/GpVU3Ed9+hvhV/bJqWYy3Q6fbTuEA7r
      CfPM7f3FdWdCDtOpi6IoqKpK7Ivf3Rn1/tW6Y8rx7y6tmawnrF+rN59f3/PlOllmiJn9uE4b
      aQvLPl7Hx58XFFV9VKdUVD227WwLNlLz458XF/eEz6+4fmewO1M+udtAdWZoER1nNmX55Vsk
      whqDwYBU6upbgp2//0smdz449/Ivf+8HhKvXHv1996//GKvTOHf5W9//EMM8ugIyEpFHjCwC
      /y2AGqOQ0rD1EslYiGQiRn8wQYmkH/2KXDmPFwkqivpU9VYU9dEv5HPx+cUTPdXFcKXltWN/
      57LyREmxWORnSgSaBEAEmgRABNoLPSEmcetttGTm3MurUXkmctC80AEovfs3V10F8ZyTQyAR
      aBIAEWgSABFoEgARaBIAEWgSABFoEgARaBIAEWgSABFoEgARaJ4D4Do2ew8f4rrQqO1Sa3YY
      Doc4lkHvcHwRdRTiwni+FsgyZxw0m6xUC/SGDorbYhLWsGcG6zduyTOCxULx1ALUdrcx3BCZ
      RAxcB1UPoasa9txkPJ2jfWmytRDPO08BWF7fQLMmDEdjau0JUWWCGk2wVKry1Tdv0uv1UVVV
      HpQtFoavB2W//fY7n/+1dOy1ctHfc5qEuCoyCiQCTQIgAk0CIAJNAiACTQIgAk0CIAJNAiAC
      TQIgAk0CIAJNAiACTQIgAk0CIALthb436NMKl1dRw9Grroa4QP6fEXaGwWBAOh3Mp8XMZjMU
      RZFnhC0IOQQSgSYBEIHmuQ8wHfV5sFtD0cOYwz62HiOfjZMMq8zDeaqFq388qhDn5XlOsKVF
      iYVUCtkY8cI6uXiEyWTI/f0ulXwS27ZlTrBYGJ7nBE8bO9QPZzhKlEl3j97UIB5Pc2Ntif1W
      D03TZE6wWBgyCvSMySjQYrmSTvCTMuc4zpWVd133zPJPe9uXJ5W/ys9+1eWftG3Os+2eVP7L
      ruRE2JMOkZ60ka+y/NMe3i3yZ7+s8qct8zRlTyt/6S2ANRvR7nTYvPuA0zaVpmmnlp8Oe7Ra
      LbZ2932VP+x1aTcP2Ks3T3xdUZQzy3e7XZr1hxy0uqcuczqXeq1+5k5y1nuDS7fTZvveJsPp
      3HN513V5sLlJq9fBtE7+pT6rvGVM6HQ6fPrZfV/b3hj1aff71JudE19XFAVVPX2XbBw0cN05
      B42Ty5/d/3Tpdjrs3t/kcGI++t9LD8BsNOD/PtnEnE05+Ss826jb4c72PvPx4NQv4Sy91gHb
      Bx1GfT87MDRruzT7E3rtlq/yo16D2598Sudw5KO0zb1P7jB3LZpt7+Vdd8bDrYc0Gg2GU/PJ
      Bb7EnAy5ffsO5szAe+mj725/Z5t+x/u2M6dD7ty5w6ef3kUNhXy8u8ODu59iOnMazcGj/730
      QyA9HOW1W79BpeCvk5zI5igbLq7rcDgYk0snPJXPF4sY3QmZlL+beBWLRYYGxKJhX+UVHUK2
      xnAwoZBJei1NaXWDjY11f++tRCivFxnOHBKRs1qak0WSaXLpLIVyHj+7YKpYIDKwyOaznsuG
      YykqS3kqy2sk4t6/u363S2nlaLvli4/3vUtvAbRwhIPd+3x29wG2j/KDdpvCyjrOfE7t4a7n
      8v3eIZ1mncYpzfATyx8e0th/SLt76Ku8rmkc1OuoIT+/PQrGqM+dTzcZTgzPpV1nxsTQSIcc
      fvrBLzy3wMZ4SKfdYW+vhuX53WHU6dHvdWi1+z5KQ7lSodc+oN0bPHnhL8nkimRScdKpFJr+
      eNtfcgtgMRqbFAoFUEP46U6Wrl1nc3OTeKZIIef9rHN5eYVQJIIWz3gua1tzqitrxFMjcoWi
      5/IAoXCSclUjnYz7Ku+6FoloivHMJuVxFYoaJR5TMBydjWtLeG0DQuEYN75yE9s0PZcFyC6v
      kmh3Wb++4blsq75HezCh0+ry9uo1z+UVxWF76zOi0QxOxOTmyyXg0lsAnWRMpdFo0x/4+wVt
      7++hJjKEQxrJpNdDCNjb2aE9GNOq1zyXteZzJpOjcX7L8tN+Qbd3SLmU5d5nW8zts4cMf53L
      bDLm/tbOE4cbTy4+52Bnn9F0QiZf9PzlO/acVqtFu9311f/q7Gyx9PLr7G1teR5KjidThDQV
      BYfJzE8PRKNSqTKYztlYf/zjdemHQMZ4BKpCvzf01YxG4xHGh0Nmhp+NAOVSDsuyiSe9tx6R
      WJxeu8FoNKJ+4K8TvLa2ysyE1eWC552gWauhJ7JUSkXicT99EJWVayuoroqf0Vw9miAdj5DK
      ZHy13slikc7+LmDTH049lU2ksrzyyg1+9/e+Sc5r0weATb3eIR2Hdu/xg1wuPQDxXJFiPkO1
      4r0JtswZjp6gmEsR9XmmtdHooioKs4n3UZRRv0PncIRj2ziOvxZgb+cz7m/eoz+2CevetsBS
      tQxuiOtredptP0/jcQkn8/zmN75OKuq9G2sMezjhFCvLZV87jmXMmDsOoViKXNrfISCcPVR6
      mla9xsQ0cQH7C633JQfApd+oYYWSVKveN6IejhJWHSbTKTPDeycQoLq6ymqlQCpb8Fw2mS2w
      Wi0ynkwJ6d67T64LmcIq5XKWjI8dQFHClItxPtvpslr1MYqmqBzs3efDn/+SmY9DuHAqi27P
      aLe7+DgAQ1FUNEVB87EDP62l6gqFTJTR4YxI7HHreck1cRjMbNzpgEaj6XkjOrZFfW+XUCJL
      LuNvGLVRr5HKlxgd+jsPYFqgKw6zmfcAbt/bxDYnRHJrVJe8DwWCRf2gSyGf9dkHsAhF08R1
      l5npPQDzyZDt+zvUmk3PfQDHntOfzMkk4+Sy3gcgnp4LagTXNZiMZo/+95JHgeZMDZVbr7/E
      /TufYIPnw6BMaRnLthmMJmSz3kNQrpR5cO8uqWzec9luo8m1V2743miGYaCEVBp3N0nF3yCf
      8XYOA446gePxmEzeRwCUEJEwWIpONOR9HEfTQ6xeW6Y/mHkOgKqFWF6psL97gH4lV6BpvHrz
      dcCg1byyAETQlTF37tzB1cKeT6aoms580GV/BhEc3NWK586YNTcxZjOiSe87ULdRY7/bQQdy
      xQqVpZyn8q995U0AXn3V81sDMBwMWSqXMS0bTfO+F7muQTq3Sioyx5jbHkNgMTFcotEolVjS
      16FDe+cB/UOLw/GITOZ1H2vwr92o0R9OgBkORZZKR63QJQdA4catN3yXdmybTKlCr94lm054
      3vmNyYCDVpdOp0MqX/b8/oXqKqmlou+N9rQX0g37HUaGhWUYZIpVz+V7zQbbD9oUSjleyZU8
      llaZzSYoqoqiqL5GgTKVKvXDLa5fv+mj9NPJF8tkC0ftlvqF65UWak6w6zqghSlkE4TC3keB
      IvE0UV3h1de/wmjg/Wxk7il2/mehP5jgjEaU1ks0a177MA6DCVxfzTEcDHx0ghWWymWcuYGi
      +zuJqYejZFJRdvbqPko/HVXT0HUdXddRv/BDtFAB0PQQ4/YB/ckMw+d5gFQ6zfCwTzK1eBN2
      ioUc4XSGYXdCpeq9Ez067FDrTVkppk69GvR0CrN+EzuSZdSsY7qu536AOZ3ghhK8/qr3M7kX
      ZeFujBWJhxnXBoSy/qquKJ9PrHjG9boMpeoKXg9cHlN542vvPHmxM0SSaSb1XRxcag/rbKwt
      eyo/PewzNuY0O32qS94HIS7CQrUAALblki+VWa742xUGh0NSmSyT0fAZ1+zFZ5kmpmUxn7us
      ry17PgwKRTSmE/O5umnCwgUgmspgDDo0mm3PZV3HQosmMEd9iuXKBdTuBefazC0HY3zI1m7N
      UytqTgcYWo61chHF8nf4ehEWLgCaHiKbzdLrer+cub29ha3D4Uyn2/B+MVywuZi2QiqqEE0v
      8dK6txbAtmbs7uxw//59Dnxein4RFq4P4DoOhmEQjXm/lCCcSNLo9bBnJgT0rhX+Wdz9bItw
      RCGVX/F8AjOaKPDqjaPvTA/5m0x0ERbqtijjfpOBFcYYDtm4vvbM1/8svNi3RXGxbZv6fp3q
      +pqvOQHPm4VqAVRNo761gzGb4qgK16+t+hqPFn4paJrO6vrz+ePjx0K1AIvgxW4BXjwL1wkW
      4ln6f7fesKRp8mxyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sales by Sub-Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sell by Region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Customers' width='192'>
      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
      HzMpNxDkDIv9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='62' name='Values' width='192'>
      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
      GNCXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='59' name='years' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA7CAYAAAAtiYXdAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAEW0lEQVR4nO3bf0zUdRzH8Rdf4IDj+KEEA0paif9wuUybM3JkQbnkGEqNGT/mFMp++MdB
      prQRk9aalGA1VitoZjE2HaWSa2zJJCqyGUYCt5XMsWZUJOh5Pzju4vvtjza2b7ALztNrvV+P
      P7/fzz4/2D335e52YZqmaSASSgn1BohCiQGQaAyARGMAJBoDINEYAInGAEi0fw3A7XbfjH0Q
      hQSfACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgM
      gERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJFhGqhYeHhzE0cUuolqcQ
      uyvpMsxmc6i3wScAycYASDQGQKIxABKNAZBoDCAAqjqDL7qOwlpyH554MB1leRlorN0Bh31S
      N+782R5YS7Ox9YFUWEuzcf5sz7zzjY4MoaYiDx2HDvhdd3RkCE8VmvHSM/mYcjmCdRzRGEAA
      Dr9Vi69PfYKql1vR3n0JLZ02pKRl4L3Xd2PmTx8AYMR2Dq1Ne1FRvR/tp39BRfV+tDbtxYjt
      3Ow8Lqcd7zZU4WBdJWJiTX7X9Pm8OPbhG7g/rwgxsXE39HySMIAA5BaU48XX2nF7phlhioIY
      own5xTthnxyH/cplaKqK7pNtKCzZhZVrcqAo4Vi5JgeFJbvQfbINmqoCAHq7jmKF+V40Hv4S
      5nvW+12zt+sIYmJNWJuTfzOOKAYDCEDG8iyEKfo/ndvlQFSMEYaoaLicdkyMjyFrVbZuTNaq
      bEyMj8HltAMAHn38STxkKUVEZKTf9cZ+HsFXn3+Mx7Y9j/CIkH13+b/EAIJg8o9f0dq4Bzkb
      i2GKXwLvtAeqOgOjKV43zmiKh6rOwDvtWfDcPp8Xxz56E49s3o7k1GXB3rp4DOA6aKqKMz2f
      ou45CzYW7cD6vKLZe6a4RBgM0brxBkM0THGJi1qjr/s4Ig0GrM3ZFJQ9kx6fpwGa9kyh7e19
      uPjjD6g92IHUW+/Q3Xc6rsLr9ejesHq9HjgdVxe8xu9jozjT04mdLzQiPML/v0kUGAYQAJ/P
      i9bGPUhMSsa+5k5ERhp09w1R0VCUcLid15CwJHn2utt5DYoSDkNU9D+nnFdf93F8/80pPF10
      95x72zetwLoNBbDWt1zfYYRjAAHo7ToCACiuqJnz4geAWFMCklLSYRvoQ9qy5bPXbQN9SEpJ
      R6wpYUHrbCm3Yku5VXftp+Hv0HHoAKrqW/hxaBDwPcAieac9GPj2NB7evG3eFz8AhCkKci1l
      ONHejMH+XqjqDAb7e3GivRm5lrI5nyBR6PAJsEhOxxWMXhhE3bOWOfeWJqfhlXc+w9LkNGRm
      rUZldQPeb6rBb5cuIvW2O1FZ3YDMrNUAgCmXA6/u3ooLtn7dHB0f/P1tsLW+Bes2FNz4AwkX
      pmma5m+A2+2G0WgM+sL8QYxs/EEM0X8AAyDRGACJxgBINAZAov0FyEwu/wP3KWkAAAAASUVO
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
